body{
    text-align: center;
    font-family: monospace;
    font-size: x-large;
    width: 100%;
    height: 100%;
}
/* WHAT ARE THE WAYS TO CENTER A DIV */

#displaydivcetner1{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* Using Flex Box */
#displaydivcetner2{
    margin-top: 10%;
    display: flex;
    justify-content: center; /* aligns items horizontally */
    align-items: center;    /* aligns items vertically */
    height: 100vh;
}

#displaydivcetner3{
    margin-top: 10%;
    display: grid;
    justify-content: center; /* aligns items horizontally */
    align-items: center;    /* aligns items vertically */
    height: 100vh;
}

/* WHAT IS THE DIFFERENCE BETWEEN GRID AND FLEX BOX */
/*Grid is a two-dimensional system that offers control over rows and columns, 
while Flexbox is a one-dimensional system that focuses on distributing space along a single axis. 
The choice between Grid and Flexbox depends on the specific layout requirements of your web design project. 
In many cases, they can be used together to achieve the desired layout. */

/* WHAT IS CSS BOX MODEL */ 
/* The CSS box model is a rectangular layout paradigm for HTML elements */
/* The box model consists of four components: CONTENT, 
                                            PADDING,
                                            BORDER, 
                                            and MARGIN
                                    which define the dimensions and spacing of elements on a web page. */


/* DRAW PIE CHART USING CSS */
#piechart{
    width: 200px;
    height: 200px;
    margin: 20px 110px;
    background-image: conic-gradient(green var(--percentage), lightgreen 0);
    border-radius: 50%; /* to make it a circle */
}

input{
    font-size: 20px;
    margin: 20px;
    width: 400px;
}
